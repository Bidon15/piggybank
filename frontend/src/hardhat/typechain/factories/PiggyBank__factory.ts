/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { PiggyBank } from "../PiggyBank";

export class PiggyBank__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _name: string,
    _expire: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PiggyBank> {
    return super.deploy(_name, _expire, overrides || {}) as Promise<PiggyBank>;
  }
  getDeployTransaction(
    _name: string,
    _expire: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _expire, overrides || {});
  }
  attach(address: string): PiggyBank {
    return super.attach(address) as PiggyBank;
  }
  connect(signer: Signer): PiggyBank__factory {
    return super.connect(signer) as PiggyBank__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PiggyBank {
    return new Contract(address, _abi, signerOrProvider) as PiggyBank;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_expire",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "expirationDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newName",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161056b38038061056b8339818101604052604081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b90830190602082018581111561006857600080fd5b825164010000000081118282018810171561008257600080fd5b82525081516020918201929091019080838360005b838110156100af578181015183820152602001610097565b50505050905090810190601f1680156100dc5780820380516001836020036101000a031916815260200191505b5060405260209081015184519093506100fb9250600191850190610117565b5060025550600080546001600160a01b031916331790556101aa565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061015857805160ff1916838001178555610185565b82800160010185558215610185579182015b8281111561018557825182559160200191906001019061016a565b50610191929150610195565b5090565b5b808211156101915760008155600101610196565b6103b2806101b96000396000f3fe6080604052600436106100555760003560e01c806306fdde031461005a57806365ac4341146100e45780638da5cb5b1461010b5780638f6204871461013c578063c47f002714610151578063ed88c68e14610204575b600080fd5b34801561006657600080fd5b5061006f61020c565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100a9578181015183820152602001610091565b50505050905090810190601f1680156100d65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156100f057600080fd5b506100f9610299565b60408051918252519081900360200190f35b34801561011757600080fd5b5061012061029f565b604080516001600160a01b039092168252519081900360200190f35b34801561014857600080fd5b506100f96102ae565b34801561015d57600080fd5b506102026004803603602081101561017457600080fd5b810190602081018135600160201b81111561018e57600080fd5b8201836020820111156101a057600080fd5b803590602001918460018302840111600160201b831117156101c157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506102b4945050505050565b005b6102026102df565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102915780601f1061026657610100808354040283529160200191610291565b820191906000526020600020905b81548152906001019060200180831161027457829003601f168201915b505050505081565b60035490565b6000546001600160a01b031681565b60025481565b6000546001600160a01b031633146102c857fe5b80516102db9060019060208401906102e9565b5050565b6003805434019055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032a57805160ff1916838001178555610357565b82800160010185558215610357579182015b8281111561035757825182559160200191906001019061033c565b50610363929150610367565b5090565b5b80821115610363576000815560010161036856fea264697066735822122081734ae9c11ea981475b378574f973c7a7afcd3517516f1367338f5b7cb9a0eb64736f6c63430007030033";
